@using BlazorComponent.Data.ComponentLifecycle
@page "/detect-changes"
@implements IDisposable

<h3>Car color in parent component: @Car.Color</h3>
<div style="border: 5px solid #7b3cc3; width: max-content; padding: 8px;">
    <span>---CarDetail.razor---</span>
    <CarDetail Car="Car"></CarDetail>
    <span>---CarDetail.razor---</span>
</div>
<div>
    <button @onclick="ChangeColor">Change color</button>
</div>

@code {
    private Car Car = new();
    private List<string> Colors = new()
    {
        "Red",
        "Green",
        "Blue",
        "Violet"
    };

    private void ChangeColor()
    {
        var random = new Random();
        int randomIndex = random.Next(0, Colors.Count - 1);
        Car.Color = Colors[randomIndex];
    }

    private void OnCarColorChanged(object sender, string color)
    {
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        Car.OnColorChanged += OnCarColorChanged;
    }

    public void Dispose()
    {
        Car.OnColorChanged -= OnCarColorChanged;
    }
}
